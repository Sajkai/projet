<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Car extends \App\Entity\Car implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'renter', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'features', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'isArchived', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'price', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'rentals', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'available', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'imageFile', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'image', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'updatedAt'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'renter', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'features', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'isArchived', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'price', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'rentals', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'available', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'imageFile', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'image', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Car $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getPrice(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice(float $price): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getRenter(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRenter', []);

        return parent::getRenter();
    }

    /**
     * {@inheritDoc}
     */
    public function setRenter(?\App\Entity\User $renter): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRenter', [$renter]);

        return parent::setRenter($renter);
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): ?\App\Entity\CarType
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(?\App\Entity\CarType $type): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getFeatures(): ?array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeatures', []);

        return parent::getFeatures();
    }

    /**
     * {@inheritDoc}
     */
    public function setFeatures(?array $features): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFeatures', [$features]);

        return parent::setFeatures($features);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsArchived(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsArchived', []);

        return parent::getIsArchived();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsArchived(bool $isArchived): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsArchived', [$isArchived]);

        return parent::setIsArchived($isArchived);
    }

    /**
     * {@inheritDoc}
     */
    public function getRentals(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRentals', []);

        return parent::getRentals();
    }

    /**
     * {@inheritDoc}
     */
    public function addRental(\App\Entity\Rent $rent): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRental', [$rent]);

        return parent::addRental($rent);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLocation(\App\Entity\Rent $rent): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLocation', [$rent]);

        return parent::removeLocation($rent);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailable(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvailable', []);

        return parent::getAvailable();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvailable(bool $available): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvailable', [$available]);

        return parent::setAvailable($available);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(?\DateTimeInterface $updatedAt): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function setImageFile(\Symfony\Component\HttpFoundation\File\File $imageFile = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageFile', [$imageFile]);

        return parent::setImageFile($imageFile);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageFile(): ?\Symfony\Component\HttpFoundation\File\File
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageFile', []);

        return parent::getImageFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage(\Vich\UploaderBundle\Entity\File $image): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage(): ?\Vich\UploaderBundle\Entity\File
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

}
