<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Rent__CLASSMETADATA__' => 0,
'App__Entity__User__CLASSMETADATA__' => 1,
'App__Entity__CarType__CLASSMETADATA__' => 2,
'Vich__UploaderBundle__Entity__File__CLASSMETADATA__' => 3,
'App__Entity__Car__CLASSMETADATA__' => 4,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Rent',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Rent',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\RentRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'startDate' => [
                            'fieldName' => 'startDate',
                            'type' => 'date',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'start_date',
                        ],
                        'endDate' => [
                            'fieldName' => 'endDate',
                            'type' => 'date',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'end_date',
                        ],
                        'isMonthlyRecurring' => [
                            'fieldName' => 'isMonthlyRecurring',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'is_monthly_recurring',
                        ],
                        'price' => [
                            'fieldName' => 'price',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'price',
                        ],
                        'isPaid' => [
                            'fieldName' => 'isPaid',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'is_paid',
                        ],
                        'paidMonths' => [
                            'fieldName' => 'paidMonths',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'paid_months',
                        ],
                        'duration' => [
                            'fieldName' => 'duration',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'duration',
                        ],
                        'finished' => [
                            'fieldName' => 'finished',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'finished',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'start_date' => 'startDate',
                        'end_date' => 'endDate',
                        'is_monthly_recurring' => 'isMonthlyRecurring',
                        'price' => 'price',
                        'is_paid' => 'isPaid',
                        'paid_months' => 'paidMonths',
                        'duration' => 'duration',
                        'finished' => 'finished',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'startDate' => 'start_date',
                        'endDate' => 'end_date',
                        'isMonthlyRecurring' => 'is_monthly_recurring',
                        'price' => 'price',
                        'isPaid' => 'is_paid',
                        'paidMonths' => 'paid_months',
                        'duration' => 'duration',
                        'finished' => 'finished',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'rent',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'rentals',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Rent',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'car' => [
                            'fieldName' => 'car',
                            'joinColumns' => [
                                [
                                    'name' => 'car_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'rentals',
                            'targetEntity' => 'App\\Entity\\Car',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Rent',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'car_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'car_id' => 'car_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'car_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\User',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 50,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'name',
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'type' => 'json',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'roles',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'password',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'email',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'roles' => 'roles',
                        'password' => 'password',
                        'email' => 'email',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'roles' => 'roles',
                        'password' => 'password',
                        'email' => 'email',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                    ],
                ],
                'associationMappings' => [
                    [
                        'cars' => [
                            'fieldName' => 'cars',
                            'mappedBy' => 'renter',
                            'targetEntity' => 'App\\Entity\\Car',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'rentals' => [
                            'fieldName' => 'rentals',
                            'mappedBy' => 'user',
                            'targetEntity' => 'App\\Entity\\Rent',
                            'cascade' => [],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\CarType',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\CarType',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CarTypeRepository',
                ],
                'embeddedClasses' => [
                    [
                        'image' => [
                            'class' => 'Vich\\UploaderBundle\\Entity\\File',
                            'columnPrefix' => null,
                            'declaredField' => null,
                            'originalField' => null,
                        ],
                    ],
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'name',
                        ],
                        'updatedAt' => [
                            'fieldName' => 'updatedAt',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'updated_at',
                        ],
                        'image.name' => [
                            'fieldName' => 'image.name',
                            'nullable' => true,
                            'type' => 'string',
                            'columnName' => 'image_name',
                            'originalClass' => 'Vich\\UploaderBundle\\Entity\\File',
                            'declaredField' => 'image',
                            'originalField' => 'name',
                        ],
                        'image.originalName' => [
                            'fieldName' => 'image.originalName',
                            'columnName' => 'image_original_name',
                            'nullable' => true,
                            'type' => 'string',
                            'originalClass' => 'Vich\\UploaderBundle\\Entity\\File',
                            'declaredField' => 'image',
                            'originalField' => 'originalName',
                        ],
                        'image.mimeType' => [
                            'fieldName' => 'image.mimeType',
                            'columnName' => 'image_mime_type',
                            'nullable' => true,
                            'type' => 'string',
                            'originalClass' => 'Vich\\UploaderBundle\\Entity\\File',
                            'declaredField' => 'image',
                            'originalField' => 'mimeType',
                        ],
                        'image.size' => [
                            'fieldName' => 'image.size',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'image_size',
                            'originalClass' => 'Vich\\UploaderBundle\\Entity\\File',
                            'declaredField' => 'image',
                            'originalField' => 'size',
                        ],
                        'image.dimensions' => [
                            'fieldName' => 'image.dimensions',
                            'type' => 'simple_array',
                            'nullable' => true,
                            'columnName' => 'image_dimensions',
                            'originalClass' => 'Vich\\UploaderBundle\\Entity\\File',
                            'declaredField' => 'image',
                            'originalField' => 'dimensions',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'updated_at' => 'updatedAt',
                        'image_name' => 'image.name',
                        'image_original_name' => 'image.originalName',
                        'image_mime_type' => 'image.mimeType',
                        'image_size' => 'image.size',
                        'image_dimensions' => 'image.dimensions',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'updatedAt' => 'updated_at',
                        'image.name' => 'image_name',
                        'image.originalName' => 'image_original_name',
                        'image.mimeType' => 'image_mime_type',
                        'image.size' => 'image_size',
                        'image.dimensions' => 'image_dimensions',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'car_type',
                    ],
                ],
                'associationMappings' => [
                    [
                        'Cars' => [
                            'fieldName' => 'Cars',
                            'mappedBy' => 'type',
                            'targetEntity' => 'App\\Entity\\Car',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'orderBy' => [
                                'price' => 'ASC',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\CarType',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Vich\\UploaderBundle\\Entity\\File',
                ],
                'namespace' => [
                    'Vich\\UploaderBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Vich\\UploaderBundle\\Entity\\File',
                ],
                'isEmbeddedClass' => [
                    true,
                ],
                'fieldMappings' => [
                    [
                        'name' => [
                            'fieldName' => 'name',
                            'nullable' => true,
                            'type' => 'string',
                            'columnName' => 'name',
                        ],
                        'originalName' => [
                            'fieldName' => 'originalName',
                            'columnName' => 'original_name',
                            'nullable' => true,
                            'type' => 'string',
                        ],
                        'mimeType' => [
                            'fieldName' => 'mimeType',
                            'columnName' => 'mime_type',
                            'nullable' => true,
                            'type' => 'string',
                        ],
                        'size' => [
                            'fieldName' => 'size',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'size',
                        ],
                        'dimensions' => [
                            'fieldName' => 'dimensions',
                            'type' => 'simple_array',
                            'nullable' => true,
                            'columnName' => 'dimensions',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'name' => 'name',
                        'original_name' => 'originalName',
                        'mime_type' => 'mimeType',
                        'size' => 'size',
                        'dimensions' => 'dimensions',
                    ],
                ],
                'columnNames' => [
                    [
                        'name' => 'name',
                        'originalName' => 'original_name',
                        'mimeType' => 'mime_type',
                        'size' => 'size',
                        'dimensions' => 'dimensions',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'file',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Car',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Car',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CarRepository',
                ],
                'embeddedClasses' => [
                    [
                        'image' => [
                            'class' => 'Vich\\UploaderBundle\\Entity\\File',
                            'columnPrefix' => null,
                            'declaredField' => null,
                            'originalField' => null,
                        ],
                    ],
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'features' => [
                            'fieldName' => 'features',
                            'type' => 'json',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'features',
                        ],
                        'isArchived' => [
                            'fieldName' => 'isArchived',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'is_archived',
                        ],
                        'price' => [
                            'fieldName' => 'price',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'price',
                        ],
                        'available' => [
                            'fieldName' => 'available',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'available',
                        ],
                        'updatedAt' => [
                            'fieldName' => 'updatedAt',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'updated_at',
                        ],
                        'image.name' => [
                            'fieldName' => 'image.name',
                            'nullable' => true,
                            'type' => 'string',
                            'columnName' => 'image_name',
                            'originalClass' => 'Vich\\UploaderBundle\\Entity\\File',
                            'declaredField' => 'image',
                            'originalField' => 'name',
                        ],
                        'image.originalName' => [
                            'fieldName' => 'image.originalName',
                            'columnName' => 'image_original_name',
                            'nullable' => true,
                            'type' => 'string',
                            'originalClass' => 'Vich\\UploaderBundle\\Entity\\File',
                            'declaredField' => 'image',
                            'originalField' => 'originalName',
                        ],
                        'image.mimeType' => [
                            'fieldName' => 'image.mimeType',
                            'columnName' => 'image_mime_type',
                            'nullable' => true,
                            'type' => 'string',
                            'originalClass' => 'Vich\\UploaderBundle\\Entity\\File',
                            'declaredField' => 'image',
                            'originalField' => 'mimeType',
                        ],
                        'image.size' => [
                            'fieldName' => 'image.size',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'image_size',
                            'originalClass' => 'Vich\\UploaderBundle\\Entity\\File',
                            'declaredField' => 'image',
                            'originalField' => 'size',
                        ],
                        'image.dimensions' => [
                            'fieldName' => 'image.dimensions',
                            'type' => 'simple_array',
                            'nullable' => true,
                            'columnName' => 'image_dimensions',
                            'originalClass' => 'Vich\\UploaderBundle\\Entity\\File',
                            'declaredField' => 'image',
                            'originalField' => 'dimensions',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'features' => 'features',
                        'is_archived' => 'isArchived',
                        'price' => 'price',
                        'available' => 'available',
                        'updated_at' => 'updatedAt',
                        'image_name' => 'image.name',
                        'image_original_name' => 'image.originalName',
                        'image_mime_type' => 'image.mimeType',
                        'image_size' => 'image.size',
                        'image_dimensions' => 'image.dimensions',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'features' => 'features',
                        'isArchived' => 'is_archived',
                        'price' => 'price',
                        'available' => 'available',
                        'updatedAt' => 'updated_at',
                        'image.name' => 'image_name',
                        'image.originalName' => 'image_original_name',
                        'image.mimeType' => 'image_mime_type',
                        'image.size' => 'image_size',
                        'image.dimensions' => 'image_dimensions',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'car',
                    ],
                ],
                'associationMappings' => [
                    [
                        'renter' => [
                            'fieldName' => 'renter',
                            'joinColumns' => [
                                [
                                    'name' => 'renter_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'cars',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Car',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'renter_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'renter_id' => 'renter_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'renter_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'joinColumns' => [
                                [
                                    'name' => 'type_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'Cars',
                            'targetEntity' => 'App\\Entity\\CarType',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Car',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'type_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'type_id' => 'type_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'type_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'rentals' => [
                            'fieldName' => 'rentals',
                            'mappedBy' => 'car',
                            'targetEntity' => 'App\\Entity\\Rent',
                            'cascade' => [],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Car',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
